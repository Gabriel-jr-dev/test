import { Language, Translation } from '@/types/dictionary';

export const AVAILABLE_LANGUAGES: Language[] = [
  { code: 'en', name: 'English', nativeName: 'English', flag: 'ðŸ‡ºðŸ‡¸', isPremium: false, isDownloaded: true, downloadSize: '15 MB' },
  { code: 'pt', name: 'Portuguese', nativeName: 'PortuguÃªs', flag: 'ðŸ‡§ðŸ‡·', isPremium: false, isDownloaded: true, downloadSize: '18 MB' },
  { code: 'es', name: 'Spanish', nativeName: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸', isPremium: false, isDownloaded: true, downloadSize: '16 MB' },
  { code: 'fr', name: 'French', nativeName: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·', isPremium: true, isDownloaded: false, downloadSize: '17 MB' },
  { code: 'de', name: 'German', nativeName: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª', isPremium: true, isDownloaded: false, downloadSize: '19 MB' },
  { code: 'it', name: 'Italian', nativeName: 'Italiano', flag: 'ðŸ‡®ðŸ‡¹', isPremium: true, isDownloaded: false, downloadSize: '16 MB' },
  { code: 'ja', name: 'Japanese', nativeName: 'æ—¥æœ¬èªž', flag: 'ðŸ‡¯ðŸ‡µ', isPremium: true, isDownloaded: false, downloadSize: '25 MB' },
  { code: 'zh', name: 'Chinese', nativeName: 'ä¸­æ–‡', flag: 'ðŸ‡¨ðŸ‡³', isPremium: true, isDownloaded: false, downloadSize: '28 MB' },
];

// Mock dictionary data for offline use
const MOCK_DICTIONARY: Record<string, Record<string, Translation>> = {
  'en-pt': {
    'hello': {
      word: 'hello',
      translation: 'olÃ¡',
      pronunciation: 'oh-LAH',
      partOfSpeech: 'interjection',
      examples: ['Hello, how are you?', 'OlÃ¡, como vocÃª estÃ¡?']
    },
    'world': {
      word: 'world',
      translation: 'mundo',
      pronunciation: 'MOON-doo',
      partOfSpeech: 'noun',
      examples: ['The world is beautiful', 'O mundo Ã© bonito']
    },
    'book': {
      word: 'book',
      translation: 'livro',
      pronunciation: 'LEE-vroo',
      partOfSpeech: 'noun',
      examples: ['I love reading books', 'Eu amo ler livros']
    },
  },
  'pt-en': {
    'olÃ¡': {
      word: 'olÃ¡',
      translation: 'hello',
      pronunciation: 'heh-LOH',
      partOfSpeech: 'interjection',
      examples: ['OlÃ¡, como vocÃª estÃ¡?', 'Hello, how are you?']
    },
    'mundo': {
      word: 'mundo',
      translation: 'world',
      pronunciation: 'WURLD',
      partOfSpeech: 'noun',
      examples: ['O mundo Ã© bonito', 'The world is beautiful']
    },
  },
  'en-es': {
    'hello': {
      word: 'hello',
      translation: 'hola',
      pronunciation: 'OH-lah',
      partOfSpeech: 'interjection',
      examples: ['Hello, how are you?', 'Hola, Â¿cÃ³mo estÃ¡s?']
    },
    'book': {
      word: 'book',
      translation: 'libro',
      pronunciation: 'LEE-broh',
      partOfSpeech: 'noun',
      examples: ['I love reading books', 'Me encanta leer libros']
    },
  },
};

export const searchTranslation = (
  word: string,
  sourceLanguage: string,
  targetLanguage: string
): Translation | null => {
  const key = `${sourceLanguage}-${targetLanguage}`;
  const dictionary = MOCK_DICTIONARY[key];
  
  if (!dictionary) return null;
  
  const normalizedWord = word.toLowerCase().trim();
  return dictionary[normalizedWord] || null;
};

export const getLanguageByCode = (code: string): Language | undefined => {
  return AVAILABLE_LANGUAGES.find(lang => lang.code === code);
};
